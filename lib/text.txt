import 'package:alfamfg_mobile_app/pages/inventory_page.dart';
import 'package:alfamfg_mobile_app/pages/manufacturing_page.dart';
import 'package:alfamfg_mobile_app/pages/purchasing_page.dart';
import 'package:alfamfg_mobile_app/pages/sales_page.dart';
import 'package:alfamfg_mobile_app/test.dart';
import 'package:flutter/material.dart';
import 'package:camera/camera.dart';
import 'login_page.dart'; // Import the LoginPage
import 'camera_page.dart'; // Import the CameraPage

class UserHomePage extends StatelessWidget {
  final String firstName;
  final String lastName;

  const UserHomePage({
    super.key,
    required this.firstName,
    required this.lastName,
  });

  void _logout(BuildContext context) {
    Navigator.pushReplacement(
      context,
      MaterialPageRoute(builder: (context) => const LoginPage()),
    );
  }

  void _openCameraPage(BuildContext context) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => const CameraPage(
          camera: CameraDescription(
            name: 'Default Camera',
            lensDirection: CameraLensDirection.front,
            sensorOrientation: 0,
          ),
        ),
      ),
    );
  }

  void _navigateToPage(BuildContext context, String page) {
    Widget pageWidget;
    switch (page) {
      case 'Manufacturing':
        pageWidget = const ManufacturingPage();
        break;
      case 'Inventory':
        pageWidget = const InventoryPage();
        break;
      case 'Purchasing':
        pageWidget = const PurchasingPage();
        break;
      case 'Sales':
        pageWidget = const SalesPage();
        break;
      case 'Sidebar':
        pageWidget = SidebarXalfa();
        break;
      default:
        // Show an error or handle the case where page is not found
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Page not found: $page')),
        );
        return; // Exit the method if no valid page is found
    }
    Navigator.push(
      context,
      MaterialPageRoute(builder: (context) => pageWidget),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(''),
      ),
      drawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            DrawerHeader(
              decoration: BoxDecoration(
                color: Theme.of(context).colorScheme.primary,
              ),
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  const CircleAvatar(
                    radius: 40,
                    backgroundImage: AssetImage('assets/logo.jpg'),
                  ),
                  const SizedBox(height: 14),
                  Text(
                    '$firstName',
                    style: const TextStyle(
                      color: Colors.white,
                      fontSize: 20,
                    ),
                  ),
                ],
              ),
            ),
            ListTile(
              leading: const Icon(Icons.person),
              title: const Text('Profile'),
              onTap: () {
                // Handle profile navigation
              },
            ),
            Divider(),
            ListTile(
              leading: const Icon(Icons.build),
              title: const Text('Manufacturing'),
              onTap: () {
                // Handle profile navigation
              },
            ),
            ListTile(
              leading: const Icon(Icons.inventory),
              title: const Text('Inventory'),
              onTap: () {
                // Handle profile navigation
              },
            ),
            ListTile(
              leading: const Icon(Icons.shopping_bag),
              title: const Text('Purchasing'),
              onTap: () {
                // Handle profile navigation
              },
            ),
            ListTile(
              leading: const Icon(Icons.shopping_cart),
              title: const Text('Sales'),
              onTap: () {
                // Handle profile navigation
              },
            ),
            Divider(),
            ListTile(
              leading: const Icon(Icons.logout),
              title: const Text('Logout'),
              onTap: () => _logout(context),
            ),
          ],
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Stack(
          children: [
            Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Expanded(
                  child: GridView.count(
                    shrinkWrap: true,
                    crossAxisCount: 2,
                    crossAxisSpacing: 16,
                    mainAxisSpacing: 16,
                    children: [
                      _buildCard(context, 'Manufacturing', Icons.build),
                      _buildCard(context, 'Inventory', Icons.inventory),
                      _buildCard(context, 'Purchasing', Icons.shopping_bag),
                      _buildCard(context, 'Sales', Icons.shopping_cart),
                      _buildCard(context, 'Sidebar', Icons.handyman_outlined),
                    ],
                  ),
                ),
              ],
            ),
            Positioned(
              bottom: 16.0,
              right: 16.0,
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Align(
                  alignment: Alignment.bottomRight,
                  child: ButtonBar(
                    alignment: MainAxisAlignment.end,
                    children: [
                      ElevatedButton.icon(
                        icon: const Icon(Icons.camera),
                        label: const Text('Open Camera'),
                        onPressed: () {
                          _openCameraPage(context);
                        },
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCard(BuildContext context, String title, IconData icon) {
    return GestureDetector(
      onTap: () {
        _navigateToPage(context, title);
      },
      child: Card(
        elevation: 4,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(10),
        ),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(icon, size: 50, color: Theme.of(context).colorScheme.primary),
            const SizedBox(height: 16),
            Text(
              title,
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Theme.of(context).colorScheme.onSurface,
              ),
            ),
          ],
        ),
      ),
    );
  }
}



inventory_page.dart

import 'package:alfamfg_mobile_app/charts/verticalbar_charts.dart';
import 'package:alfamfg_mobile_app/charts/verticalbar_charts2.dart';
import 'package:alfamfg_mobile_app/components/constants.dart';
import 'package:flutter/material.dart';

class InventoryPage extends StatelessWidget {
  const InventoryPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: const Text('Inventory'),
          titleTextStyle: const TextStyle(
              color: Colors.black, fontWeight: FontWeight.w700, fontSize: 26),
        ),
        body: SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(defaultPadding),
            child: Column(
              children: [
                Card(
                  color: Colors.white,
                  surfaceTintColor: secondaryColor,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(20),
                  ),
                  child: Column(
                    children: [
                      Container(
                        padding: const EdgeInsets.symmetric(
                            horizontal: defaultPadding,
                            vertical: defaultPadding),
                        child: const Column(
                          children: [
                            Row(
                              children: [
                                Expanded(
                                    flex: 4,
                                    child: Column(
                                      children: [
                                        Text(
                                          'Inventory Data',
                                          style: TextStyle(
                                              fontSize: 24,
                                              fontWeight: FontWeight.w600,
                                              color: Colors.black),
                                        )
                                      ],
                                    )),
                              ],
                            ),
                          ],
                        ),
                      )
                    ],
                  ),
                ),
                const SizedBox(height: defaultPadding),
                const VerticalbarCharts(),
                const SizedBox(height: defaultPadding),
                VerticalbarC(),
              ],
            ),
          ),
        ));
  }
}
